{
  "serializer-import": {
    "scope": "python",
    "prefix": "serializer-import",
    "body": ["from rest_framework import serializers"],
    "description": "serializer-import"
  },
  "DRF용 urls.py 설정": {
    "scope": "python",
    "prefix": "drf-urls.py",
    "body": [
      "from rest_framework import routers",
      "from django.urls import path, include",
      "",
      "from api.views import *",
      "",
      "router = routers.DefaultRouter()",
      "router.register('user', UserViewSet)",
      "",
      "urlpatterns = [",
      "  path('', include(router.urls)),",
      "]"
    ],
    "description": "DRF용 urls.py 설정"
  },
  "DRF Serializer 클래스": {
    "scope": "python",
    "prefix": "serializer-class",
    "body": [
      "from .models import ${1:Model}",
      "",
      "class $1Serializer(serializers.HyperlinkedModelSerializer):",
      "  ",
      "  # fk_field = serializers.ReadOnlyField(source='fk_field.username')",
      "  ",
      "  class Meta:",
      "    model = $1",
      "    fields = '__all__'"
    ],
    "description": "DRF Serializer 클래스"
  },
  "ModelViewSet 하위 클래스 생성": {
    "scope": "python",
    "prefix": "viewset",
    "body": [
      "from rest_framework import viewsets",
      "",
      "from .models import ${1:Model}",
      "from .serializers import $1Serializer",
      "",
      "",
      "class $1ViewSet(viewsets.ModelViewSet):",
      "  queryset = $1.objects.all()",
      "  serializer_class = $1Serializer",
      ""
    ],
    "description": "ModelViewSet 하위 클래스 생성"
  },
  "DRF Pagination 클래스 정의": {
    "scope": "python",
    "prefix": "pagination-class",
    "body": [
      "from rest_framework.pagination import PageNumberPagination ",
      "",
      "class $1Pagination(PageNumberPagination):",
      "  page_size = 10",
      "",
      ""
    ],
    "description": "DRF Pagination 클래스 정의"
  },
  "ModelViewSet 라우터 ": {
    "scope": "python",
    "prefix": "router-viewset",
    "body": [
      "from rest_framework import routers",
      "from .views import ${1:Model}ViewSet",
      "",
      "router = routers.SimpleRouter()",
      "router.register('${1/(.*)/${1:/downcase}/}', $1ViewSet)",
      "",
      "urlpatterns = router.urls",
      ""
    ],
    "description": "ModelViewSet 라우터 "
  }
}
