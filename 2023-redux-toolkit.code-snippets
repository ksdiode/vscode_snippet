{
  "redux-toolkit의 slice 파일 생성": {
    "scope": "javascript",
    "prefix": "slice",
    "body": [
      "import { createSlice } from '@reduxjs/toolkit';",
      "import { useDispatch } from 'react-redux';",
      "",
      "const ${TM_FILENAME_BASE}Slice = createSlice({",
      "  name: '$TM_FILENAME_BASE',",
      "  initialState: { data: null },",
      "  reducers: {",
      "    _action: (state, { payload: data }) => (state.anchor = data),",
      "  },",
      "  // extraReducers: (builder) =>buildExtraReducers(builder, 'data', _getTodosThunk),",
      "});",
      "",
      "export const use${TM_FILENAME_BASE/(.*)/${1:/capitalize}/} = () => {",
      "  const { _action } = ${TM_FILENAME_BASE}Slice.actions;",
      "  const dispatch = useDispatch();",
      "  return {",
      "    action: (data) => dispatch(_action(data)),",
      "  };",
      "};",
      "",
      "export default ${TM_FILENAME_BASE}Slice.reducer;",
      ""
    ],
    "description": "redux-toolkit의 slice 파일 생성"
  },
  "redux-toolkit의 configureStore()": {
    "scope": "javascript",
    "prefix": "store",
    "body": [
      "import { configureStore } from '@reduxjs/toolkit';",
      "import { Provider } from 'react-redux';",
      "",
      "export const store = configureStore({",
      "  reducer: {",
      "    ",
      "  },",
      "});",
      "",
      "export const StoreProvider = ({ children }) => {",
      "  return <Provider store={store}>{children}</Provider>;",
      "};",
      ""
    ],
    "description": "redux-toolkit의 configureStore()"
  },
  "createAsyncThunk 액션 생성 함수": {
    "scope": "javascript",
    "prefix": "createAsyncThunk",
    "body": [
      "export const _$1Thunk = createAsyncThunk(",
      "  '$TM_FILENAME_BASE/$1Thunk',",
      "  async (thunkAPI) => {",
      "    try {",
      "      const res = await axios.get('http://$0');",
      "      return res.data; // action의 payload가 됨",
      "    } catch (error) {",
      "      return thunkAPI.rejectWithValue(error);",
      "    }",
      "  }",
      ");"
    ],
    "description": "createAsyncThunk 액션 생성 함수"
  },
  "redux-toolkit의 slice.extraReducers 추가": {
    "scope": "javascript",
    "prefix": "extraReducers",
    "body": [
      "extraReducers: (builder) => {",
      "  builder.addCase($1.fulfilled, (state, {payload}) => {",
      "    // 상태 변경",
      "    ",
      "  });",
      "}",
      ""
    ],
    "description": "redux-toolkit의 slice.extraReducers 추가"
  },
  "redux-toolkit의 builder.addCase 추가": {
    "scope": "javascript",
    "prefix": "builder.addCase",
    "body": [
      "builder.addCase($1.fulfilled, (state, {payload}) => {",
      "  // 상태 변경",
      "  $0",
      "});",
      "",
      ""
    ],
    "description": "redux-toolkit의 builder.addCase 추가"
  }
}
