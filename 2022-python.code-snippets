{
  "main() 함수 정의": {
    "scope": "python",
    "prefix": "main",
    "body": ["def main():", "  $0", "", "main()"],
    "description": "main() 함수 정의"
  },
  "module name main check": {
    "scope": "python",
    "prefix": "module-main-check",
    "body": ["if __name__ == '__main__' :", "  $0"],
    "description": "module name main check"
  },
  "context-manager": {
    "scope": "python",
    "prefix": "context-manager",
    "body": [
      "def __enter__(self):",
      "  return self",
      "",
      "def __exit__(self, type, value, trace_back):",
      "  pass",
      ""
    ],
    "description": "context-manager"
  },
  "deco-function": {
    "scope": "python",
    "prefix": "deco-function",
    "body": [
      "from functools import wraps",
      "",
      "def ${1:함수명}(func):",
      "  @wraps(func)",
      "  def wrapper(*args, **kwargs):",
      "    # 전처리",
      "    result = func(*args, **kwargs)",
      "    # 후처리",
      "    return result",
      "  return wrapper",
      ""
    ],
    "description": "deco-function"
  },
  "attr-method": {
    "scope": "python",
    "prefix": "attr-method",
    "body": [
      "def __getitem__(self, key):",
      "  return getattr(self, key)",
      "",
      "def __setitem__(self, key, value):",
      "  setattr(self, key, value)"
    ],
    "description": "attr-method"
  },
  "now-string": {
    "scope": "python",
    "prefix": "now-string",
    "body": ["datetime.now().strftime(\"%Y-%m-%d %H:%M:%S\")"],
    "description": "now-string"
  },
  "now-file-name": {
    "scope": "python",
    "prefix": "now-file-name",
    "body": ["datetime.now().strftime(\"%Y%m%d_%H%M%S\")"],
    "description": "now-file-name"
  },
  "class 정의": {
    "scope": "python",
    "prefix": "class",
    "body": [
      "class $1 :",
      "  def __init__(self):",
      "    pass",
      "",
      "  def __str__(self):",
      "    return f''"
    ],
    "description": "class 정의"
  },
  "자식 class 정의": {
    "scope": "python",
    "prefix": "class-sub",
    "body": [
      "class $1($2) :",
      "  def __init__(self):",
      "    $2.__init__(self)",
      "    $0",
      "",
      "  def __str__(self):",
      "    return f''"
    ],
    "description": "자식 class 정의"
  },
  "try-except 문": {
    "scope": "python",
    "prefix": "try-except",
    "body": [
      "try:",
      "  $0",
      "except Exception as e:",
      "  print('예외 발생: ', e)"
    ],
    "description": "try-except 문"
  },
  "file-open": {
    "scope": "python",
    "prefix": "file-open",
    "body": [
      "try:",
      "  with open($1, 'r', encoding = 'utf-8') as f:",
      "    $0",
      "except Exception as e:",
      "  print('에러: ', e)",
      ""
    ],
    "description": "file-open"
  },
  "property": {
    "scope": "python",
    "prefix": "property",
    "body": [
      "@property",
      "def $1(self):",
      "  return self.__$1",
      "",
      "@$1.setter",
      "def month(self, value):",
      "  self.__$1 = value",
      ""
    ],
    "description": "property"
  }
}
